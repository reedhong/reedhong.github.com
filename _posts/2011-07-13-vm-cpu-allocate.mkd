---
title: 测试虚拟机CPU资源分配  
category: 虚拟机
tags:
 - lxc
 - vm
 - performance
layout: post
---
测试虚拟机CPU资源分配


## 说明： ##
本测试主要想验证cgroup技术对于cpu资源的分配和占用的情况，验证一些理论上的想法。


## 测试环境： ##

物理机： 
CPU 8核 Intel(R) Xeon(R) CPU X3440  @ 2.53GHz  
内存 8G
虚拟机：domain1, domain2. 二者的cpu资源通过管理平台动态调整

测试方法：
我们在domain1上跑apache webserver，在另外一台物理主机上通过ab，测试apache的性能参数，通过这个观测虚拟机的性能。或者跑死循环，对比cpu的情况


## 测试场景： ##

1. domain1独占1个cpu
压力测试：./ab  -c 100 -n 50000 -t 10000 http://10.1.152.69/
测试结果：
1) 只占用cgroup中对应cpu.cpuset指定的cpu
2) 平均请求数：9100 req/s

2. domain1独占2个cpu
压力测试：./ab  -c 100 -n 50000 -t 10000 http://10.1.152.69/
测试结果：
1) 只占用cgroup中对应cpu.cpuset指定的cpu。而且是平均分配到指定的CPU上
2) 平均请求数：10500 req/s
注：这里请求数并没有出现随着cpu个数而线性增长的情况，主要受限于我们在单点做压力测试，每个CPU的消耗还只有一半而已。

3. domain1独占3个cpu
压力测试：./ab  -c 100 -n 50000 -t 10000 http://10.1.152.69/
测试结果：
1) 只占用cgroup中对应cpu.cpuset指定的cpu。cpu占用有两个差不多，另外一个明显要少。不够均衡
2) 平均请求数：11000 req/s

4. domain1，domain2共同占用1个cpu，各占用50%, domain2闲置
压力测试：./ab  -c 100 -n 50000 -t 10000 http://10.1.152.69/
测试结果：
1) 只占用cgroup中对应cpu.cpuset指定的cpu。
2) 平均请求数：92000 req/s。
这个说明domain2的cpu分配了不用的话，domain1毫不客气地拿过来用。


5. domain1，domain2共同占用1个cpu，各占用50%, 二者均跑死循环
我们直接才python终端运行死循环程序。可以看到如下cpu占用情况 二者均占用50%的cpu。表现完美！


6. domain1，domain2共同占用1个cpu，分别占用80%, 20%, 二者均跑死循环
我们在5的基础上修改二者cpu的占用情况，发现占用变成下面的情况：79%, 20%表现也几近完美！


7. domain1，domain2共同占用0.5个cpu，分别占用30%, 20%, 二者均跑死循环
表现情况为60%, 40%.可以看到，在另外0.5的cpu闲置的情况下，domain1和domain2其实是按照占用比例把单个cpu完全瓜分。


## 总结： ##

从上面的各种测试场景我们很欣喜地看到，cgroup在cpu资源的分配上非常灵活和高效，完全符合我们的预期。总结一下包括下面一些功能  
1. 支持动态修改。在修改cpu.shares后，可以看到资源的占用立刻发生变化。  
2. 良好的细粒度支持。设置好cpu.shares我们可以让一个cpu被任意个虚拟机占用  
3. 支持overbook。虽然只分配一部分cpu。但如果别人不用，我就抢过来用，闲着也是闲着。很好的特性。