---
title: 《理解矩阵》导读
category: Game
tags:
 - math
 - matrix
 - vector
layout: post
---

在学习OpenGL视图部分开始，对各种变换看着云遮雾绕的，始终不得要领。一堆的坐标系，视图变换，模型变换，投影变换各种搅合在一起。三种基本变换：transfer, rotate, scale.一会儿说是在变换物体，一会儿说是变换坐标系，真是晕得慌。

红宝书讲述视图的章节，我至少看了两遍，才敢在分享OpenGL的时候敢讲一讲，但感觉还是讲得不清楚。顺带还看了一本经典的[3D数学基础](http://book.douban.com/subject/1400419/)，才有那么一点点感觉，本书最大的好处在把纯粹的向量和矩阵的数学运算与形象的几何变换之间建立一种联系，阐述得很详细。但总觉得还差了那么一点。

偶然间遇到孟岩的《理解矩阵》系列文章。终于有点茅塞顿开的感觉。非常认同他关于数学直觉性建立的必要性。数学在逐步发展过程中不可避免越来越抽象化。但这对于普通人来说，一些抽象化的定义和运算，只是在应付考试时起到作用。没有建立直觉性认识，就无法运用数学去解决实际的问题。

比如搜索引擎技术中，我们经常利用特征值向量去量化两篇文档的相似度。其背后的数学意义就在于向量内积跟两个向量之间夹角的cos值关联在一起。当时学习的时候只是记住这样去做，但并不理解。还有经常提及的贝叶斯，这玩意儿好像能用到好多好多地方，但我一直无法从直观上去理解它，也就很难应用在实践中。

所以，直觉性对于数学的实践非常重要。《理解矩阵》系列文章就在阐述矩阵的直觉性认识。让我们想起矩阵不仅仅是想到一坨排在一起的数字和古怪的乘法运算法则。这种理解，对于3D程序员非常有意义。

具体的系列文章见下面：  
[理解矩阵(一)](http://blog.csdn.net/myan/article/details/647511)  
[理解矩阵(二)](http://blog.csdn.net/myan/article/details/649018)  
[理解矩阵(三)](http://blog.csdn.net/myan/article/details/1865397)

 











